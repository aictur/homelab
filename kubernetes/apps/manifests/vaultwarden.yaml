apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: misc
  name: vaultwarden-data
spec:
  storageClassName: local-path
  accessModes: [ReadWriteOnce]
  resources: { requests: { storage: 1Gi } }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  namespace: misc
  labels:
    app: vaultwarden
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      volumes:
        - name: vaultwarden-data
          persistentVolumeClaim:
            claimName: vaultwarden-data
      containers:
      - name: vaultwarden
        image: vaultwarden/server:latest
        envFrom:
          - secretRef:
              name: vaultwarden-admin-secret
        env:
          - name: DOMAIN
            value: https://pass.aictur.dev
          - name: SIGNUPS_ALLOWED
            value: "false"
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1
        volumeMounts:
          - mountPath: /data
            name: vaultwarden-data
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  namespace: misc
spec:
  selector:
    app: vaultwarden
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # add an annotation indicating the issuer to use.
    cert-manager.io/cluster-issuer: letsencrypt
  name: vaultwarden
  namespace: misc
spec:
  rules:
  - host: pass.aictur.dev
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: vaultwarden
            port:
              number: 80
  tls:
  - hosts:
    - pass.aictur.dev
    secretName: vaultwarden-tls
