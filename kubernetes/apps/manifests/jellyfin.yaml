apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: home
  name: jellyfin-config
spec:
  storageClassName: local-path
  accessModes: [ReadWriteOnce]
  resources: { requests: { storage: 500M } }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: home
  name: jellyfin-data
spec:
  storageClassName: local-path
  accessModes: [ReadWriteOnce]
  resources: { requests: { storage: 100Gi } }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  jellyfin
  namespace: home
  labels:
    app:  jellyfin
spec:
  selector:
    matchLabels:
      app: jellyfin
  replicas: 1
  template:
    metadata:
      labels:
        app:  jellyfin
    spec:
      containers:
      - name:  jellyfin
        image:  jellyfin/jellyfin:10.10.3
        ports:
        - containerPort: 8096
          protocol: TCP
        volumeMounts:
        - mountPath: /data/media
          name: media
          readOnly: True
        - mountPath: /config
          name: config
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: jellyfin-data
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin-config
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: home
spec:
  selector:
    app: jellyfin
  type: ClusterIP
  ports:
  - name: jellyfin
    protocol: TCP
    port: 8096
    targetPort: 8096
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
  name: jellyfin
  namespace: home
spec:
  rules:
  - host: tv.aictur.dev
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: jellyfin
            port:
              number: 8096
  tls:
  - hosts:
    - tv.aictur.dev
    secretName: argocd-secret